export PATH="$HOME/bin:$HOME/.local/bin:$HOME/.emacs.d/bin:/usr/local/bin:$PATH"

# Helper function to check if a binary at PATH exists or a shell alias /
# function.
function has() {
  command -v "$1" &>/dev/null || type "$1" &>/dev/null;
}

# If `clear` or `cls` is not defined on shell then add a work around.
if ! has clear; then
  alias clear="printf '\033c\e[3J'";
fi

if ! has cls; then
  alias cls="printf '\033c\e[3J'";
fi

{{- if (and .ssh.agent.enable (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) }}
# Workaround for system level SSH access on Windows / WSL2
alias ssh-add="ssh-add.exe"
alias ssh="ssh.exe"
{{- end }}

###############################################################################
## OPTIONS
###############################################################################


# Keybindings
typeset -A key
key=(
    Home     "${terminfo[khome]}"
    End      "${terminfo[kend]}"
    Insert   "${terminfo[kich1]}"
    Delete   "${terminfo[kdch1]}"
    Up       "${terminfo[kcuu1]}"
    Down     "${terminfo[kcud1]}"
    Left     "${terminfo[kcub1]}"
    Right    "${terminfo[kcuf1]}"
    PageUp   "${terminfo[kpp]}"
    PageDown "${terminfo[knp]}"
)

bindkey -e
bindkey ${key[Home]}     beginning-of-line
bindkey "^A"             beginning-of-line
bindkey ${key[End]}      end-of-line
bindkey "^E"             end-of-line
bindkey ${key[Insert]}   overwrite-mode
bindkey ${key[Delete]}   delete-char
bindkey ${key[Left]}     backward-char
bindkey ${key[Right]}    forward-char

# History management
. "$HOME/.atuin/bin/env"
if has atuin; then
  eval "$(atuin init zsh)"
fi

# Prompt
if has starship; then
  eval "$(starship init zsh)"
fi

# Tab completion
zle -C complete-file complete-word _generic

zstyle ':completion:*'				completer _complete _match _approximate
zstyle ':completion:*:match:*'			original only
zstyle ':completion:*:approximate:*'		max-errors 1 numeric
zstyle ':completion:*:*'			original only
zstyle ':completion:*:complete-file::::'	completer _files
zstyle ':completion:*'				completer _complete _ignored _files

autoload -Uz compinit
compinit

setopt complete_aliases
setopt hash_list_all
setopt menu_complete

# Directory navigation
setopt auto_cd
setopt auto_pushd
setopt chase_links
setopt pushd_silent
setopt pushd_to_home

# Globbing
setopt extended_glob
setopt glob_dots
setopt mark_dirs
setopt multibyte
setopt null_glob

# Miscellaneous
setopt correct


###############################################################################
## FUNCTIONS & ALIASES
###############################################################################


# Display information about the state of the world.
function status() {
  clear

  if has fortune; then
    fortune | sed "s:^:> :"
  fi

  if has hledger; then
    echo "\n$(date +%B) Budget:"

    local next_month=$(date --date=+1month +"%Y-%m-01")

    hledger balance -N -H --end=$next_month --tree assets:budget | sed 1d
  fi

  echo
}

# Run and disown a program.
function r()
{
    $* &>/dev/null &
    disown %%
}

# Run and disown a program, then terminate the shell.
function re()
{
    $* &>/dev/null &
    disown %%
    exit
}

# Fuzzy finding for files and directories with `fzf`.
if has fzf; then
  function __fzf_any() {
    local dir="${1:-.}"
    find $dir | fzf "$2"
  }

  function __fzf_file() {
    local dir="${1:-.}"
    find $dir -type f | fzf "$2"
  }

  function __fzf_dir() {
    local dir="${1:-.}"
    find $dir -type d | fzf
  }

  alias -g ,a='$(__fzf_any  . -m)'
  alias -g ,f='$(__fzf_file . -m)'
  alias -g ,d='$(__fzf_dir  . -m)'
  alias -g ,=,f
  alias -g '.F'="| fzf"
fi

# Short aliases for common commands.
alias c='clear'
alias e='exit'
alias o=$EDITOR
alias g='git'
alias m='mosh'
alias '?'='status'
alias G=grep

# Pipelining commands.
alias -g '.G'='| grep'
alias -g '.S'='| sed'
alias -g '.C'='| cut'
alias -g '.A'='| awk'
alias -g '.U'='| sort | uniq'
alias -g '.L'='2>&1 | less'
alias -g '.H'='2>&1 | head'
alias -g '.T'='2>&1 | tail'
alias -g '.1'='2>&1'

# Basic commands with some powerups.
alias cp='cp -rpv'
alias df='df -h'
alias du='du -shc'
alias free='free -ht'
alias mkdir='mkdir -p'
alias mv='mv -v'
alias su='sudo su - '

# Miscellaneous
alias ta='tmux attach-session -d -t'
alias reload='exec zsh'

# Starship
eval "$(starship init zsh)"
